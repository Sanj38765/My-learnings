class Solution {
public:
   void rightrotate(string &s,int i, int j){
   char temp=s[i];
   for(int k=j;k>i;k--){
       s[k]=s[k-1];
   }
   s[i]=temp;
   return;
   }
   void leftrotate(string &s, int i, int j){
   char temp=s[j];
   for(int k=j;k<j;k++){
       s[k]=s[k+1];
   }
   s[j]=temp;
   return;
   }
   void permute(string &s, vector<string>v, int k, int i){
   if(i==s.size()-1){
       v.push_back(s);
       return;
   }
   for(int j=i;j<s.size();j++){
        rightrotate(s,i,j);
        permute(s,v,k,i+1);
        leftrotate(s,i,j);
   }
   }  
    string getPermutation(int n, int k) {
        string s= "";
        for(int i=1;i<=n;i++){
            s+=to_string(i);
        }
        int i=0;
        vector<string>v;
        permute(s,v,k,i);
        return v[k-1];
    }
};
